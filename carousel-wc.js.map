{"version":3,"file":"carousel-wc.js","sourceRoot":"","sources":["src/carousel-wc.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css, PropertyValues } from \"lit\";\nimport {\n  customElement,\n  property,\n  state,\n  queryAssignedElements,\n} from \"lit/decorators.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport {\n  AnimationTuple,\n  SLIDE_LEFT_IN,\n  SLIDE_LEFT_OUT,\n  SLIDE_RIGHT_IN,\n  SLIDE_RIGHT_OUT,\n  BOOTSTRAP_CHEVRON_LEFT,\n  BOOTSTRAP_CHEVRON_RIGHT,\n} from \"./constants.js\";\n\nimport \"./slide-button.js\";\n\n@customElement(\"carousel-wc\")\nexport class SimpleCarousel extends LitElement {\n  static override styles = css`\n    ::slotted(.slide-hidden) {\n      display: none;\n    }\n    /** So the elements all overlap */\n    ::slotted(*) {\n      position: absolute;\n      padding: 1em;\n    }\n    :host {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      min-width: 500px;\n    }\n    #container {\n      border-radius: 24px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex: 1;\n      margin: 0 18px;\n      padding: 1em;\n      overflow: hidden;\n      position: relative;\n      box-shadow: var(\n        --carousel-box-shadow,\n        #293198 0.2em 0.2em 0.4em,\n        #ceffff -0.1em -0.1em 0.2em\n      );\n    }\n  `;\n\n  // Assume this is always a valid slide index.\n  @property({ type: Number }) slideIndex = 0;\n  @state() private containerHeight = 0;\n  @queryAssignedElements() private readonly slideElements!: HTMLElement[];\n\n  /**\n   * Return slide index in the range of [0, slideElement.length)\n   */\n  get wrappedIndex(): number {\n    return wrapIndex(this.slideIndex, this.slideElements.length);\n  }\n\n  override render() {\n    const containerStyles = {\n      height: `${this.containerHeight}px`,\n    };\n\n    return html`<slide-button\n        part=\"buttons left-buton\"\n        exportparts=\"internal-btn : buttons\"\n        @click=${this.navigateToPrevSlide}\n      >\n        ${BOOTSTRAP_CHEVRON_LEFT}\n      </slide-button>\n      <div part=\"container\" id=\"container\" style=\"${styleMap(containerStyles)}\">\n        <slot></slot>\n      </div>\n      <slide-button\n        part=\"buttons right-buton\"\n        exportparts=\"internal-btn : buttons\"\n        @click=${this.navigateToNextSlide}\n      >\n        ${BOOTSTRAP_CHEVRON_RIGHT}\n      </slide-button>`;\n  }\n\n  override firstUpdated() {\n    this.containerHeight = getMaxElHeight(this.slideElements);\n    this.initializeSlides();\n  }\n\n  override updated(changedProperties: PropertyValues<this>): void {\n    if (changedProperties.has(\"slideIndex\")) {\n      const oldSlideIndex = changedProperties.get(\"slideIndex\");\n      if (oldSlideIndex === undefined) {\n        return;\n      }\n      const isAdvancing = this.slideIndex > oldSlideIndex;\n\n      if (isAdvancing) {\n        this.navigateWithAnimation(1, SLIDE_LEFT_OUT, SLIDE_RIGHT_IN);\n      } else {\n        this.navigateWithAnimation(-1, SLIDE_RIGHT_OUT, SLIDE_LEFT_IN);\n      }\n    }\n  }\n\n  navigateToNextSlide() {\n    this.slideIndex += 1;\n  }\n\n  navigateToPrevSlide() {\n    this.slideIndex -= 1;\n  }\n\n  private async navigateWithAnimation(\n    nextSlideOffset: number,\n    leavingAnimation: AnimationTuple,\n    enteringAnimation: AnimationTuple\n  ) {\n    this.initializeSlides();\n    const leavingElIndex = wrapIndex(\n      this.slideIndex - nextSlideOffset,\n      this.slideElements.length\n    );\n    const elLeaving = this.slideElements[leavingElIndex];\n    showSlide(elLeaving);\n\n    // Animate out current element\n    const leavingAnim = elLeaving.animate(\n      leavingAnimation[0],\n      leavingAnimation[1]\n    );\n\n    // Entering slide\n    const newSlideEl = this.slideElements[this.wrappedIndex];\n\n    // Show the new slide\n    showSlide(newSlideEl);\n\n    // Teleport it out of view and animate it in\n    const enteringAnim = newSlideEl.animate(\n      enteringAnimation[0],\n      enteringAnimation[1]\n    );\n\n    try {\n      // Wait for animations\n      await Promise.all([leavingAnim.finished, enteringAnim.finished]);\n\n      // Hide the element that left\n      hideSlide(elLeaving);\n    } catch {\n      /* Animation was cancelled */\n    }\n  }\n\n  private initializeSlides() {\n    for (let i = 0; i < this.slideElements.length; i++) {\n      const slide = this.slideElements[i];\n      slide.getAnimations().forEach((anim) => anim.cancel());\n      if (i === this.wrappedIndex) {\n        showSlide(slide);\n      } else {\n        hideSlide(slide);\n      }\n    }\n  }\n}\n\nfunction getMaxElHeight(els: HTMLElement[]): number {\n  return Math.max(0, ...els.map((el) => el.getBoundingClientRect().height));\n}\n\nfunction hideSlide(el: HTMLElement) {\n  el.classList.add(\"slide-hidden\");\n}\n\nfunction showSlide(el: HTMLElement) {\n  el.classList.remove(\"slide-hidden\");\n}\n\nfunction wrapIndex(idx: number, max: number): number {\n  return ((idx % max) + max) % max;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"carousel-wc\": SimpleCarousel;\n  }\n}\n\n"]}